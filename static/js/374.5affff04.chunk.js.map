{"version":3,"file":"static/js/374.5affff04.chunk.js","mappings":"+PAEaA,EAAgB,mCAAG,WAAOC,EAAKC,GAAZ,iFACf,mCACTC,EAFwB,yDAEwCF,EAFxC,YAE+CC,EAF/C,gBACf,mCADe,yBAIPE,EAAAA,EAAAA,IAAUD,GAJH,uBAItBE,EAJsB,EAItBA,KAJsB,kBAKvBA,GALuB,2CAAH,wDAQvBC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,SAAU,oCAE3B,IAAMC,EAAiB,CACrBC,OAAQ,MACRC,SAAU,SACVC,QAASN,GAGEO,EAAgB,SAAAC,GAC3B,IAAMC,EAAeD,EAAME,MAAM,KACjCC,QAAQC,IAAIH,GACZ,IAAMI,EAAOJ,EAAa,GACpBK,EAAKL,EAAa,GAClBM,EAASN,EAAa,GAC5B,OAAOO,MAAM,0DAAD,OACgDF,EADhD,iBAC2DD,EAD3D,mBAC0EE,GACpFZ,GACAc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYC,EAAkB,WAC7B,OAAOJ,MACL,kFACAb,GACAc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,C,qECTD,UAvBc,WACZ,OAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRJ,EAAAA,EAAAA,MAAkBH,MAAK,gBAAGQ,EAAH,EAAGA,MAAH,OAAeF,EAAYE,EAA3B,GACxB,GAAE,KAGD,iCACE,mCACCH,IACC,wBACGI,OAAOC,QAAQL,GAAUM,KAAI,+BAAEC,EAAF,KAAOrB,EAAP,YAC5B,wCACcqB,EADd,MACsB,EAAIrB,GAAOsB,QAAQ,GADzC,SAASD,EADmB,QASvC,C","sources":["Service/api.js","pages/rates/Rates.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchGeoposition = async (lat, long) => {\n  const apiKey = 'd4683b09d0c94ec0aebf0b2e043decbf';\n  const urlPosition = `https://api.opencagedata.com/geocode/v1/json?q=${lat}+${long}&key=${apiKey}&language=en`;\n\n  const { data } = await axios.get(urlPosition);\n  return data;\n};\n\nconst myHeaders = new Headers();\nmyHeaders.append('apikey', 'Ooj3b5wNKzWoS6CAI2yX4lmGJDbhW6fB');\n\nconst requestOptions = {\n  method: 'GET',\n  redirect: 'follow',\n  headers: myHeaders,\n};\n\nexport const fetchExchange = value => {\n  const valueToArray = value.split(' ');\n  console.log(valueToArray);\n  const from = valueToArray[1];\n  const to = valueToArray[3];\n  const amount = valueToArray[0];\n  return fetch(\n    `https://api.apilayer.com/exchangerates_data/convert?to=${to}&from=${from}&amount=${amount}`,\n    requestOptions,\n  ).then(response => response.json());\n};\n\nexport const currentExchange = () => {\n  return fetch(\n    'https://api.apilayer.com/exchangerates_data/latest?symbols=USD,GBP,EUR&base=UAH',\n    requestOptions,\n  ).then(response => response.json());\n};\n","import { currentExchange } from 'Service/api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Rates = () => {\n  const [exchange, setExchange] = useState(null);\n\n  useEffect(() => {\n    currentExchange().then(({ rates }) => setExchange(rates));\n  }, []);\n\n  return (\n    <>\n      <div>Rates</div>\n      {exchange && (\n        <ul>\n          {Object.entries(exchange).map(([key, value]) => (\n            <li key={key}>\n              Currency 1 {key}: {(1 / value).toFixed(2)} UAH\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Rates;\n"],"names":["fetchGeoposition","lat","long","urlPosition","axios","data","myHeaders","Headers","append","requestOptions","method","redirect","headers","fetchExchange","value","valueToArray","split","console","log","from","to","amount","fetch","then","response","json","currentExchange","useState","exchange","setExchange","useEffect","rates","Object","entries","map","key","toFixed"],"sourceRoot":""}